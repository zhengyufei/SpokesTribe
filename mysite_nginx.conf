# mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server 127.0.0.1:8011; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      8001;
    # the domain name it will serve for
    server_name 114.55.136.52; # substitute your machine's IP address or FQDN
    charset     utf-8;
    access_log  /usr/local/nginx/logs/port8001/access.log  main;
    set $resp_body "";

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /root/work/SpokesTribe-online/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /root/work/SpokesTribe-online/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /root/work/SpokesTribe-online/uwsgi_params; # the uwsgi_params file you installed
	lua_need_request_body on;
        body_filter_by_lua '
			local resp_body = string.sub(ngx.arg[1], 1, 1000)
                        ngx.ctx.buffered = (ngx.ctx.buffered or"") .. resp_body
                        if ngx.arg[2] then
                                ngx.var.resp_body = ngx.ctx.buffered
                        end
         ';
    }
}

server {
    # the port your site will be served on
    listen      8002;
    # the domain name it will serve for
    server_name 114.55.136.52; # substitute your machine's IP address or FQDN
    charset     utf-8;
    access_log  /usr/local/nginx/logs/port8002/access.log  main;
    set $resp_body "";

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    ssl on;
    ssl_certificate cert.pem;
    ssl_certificate_key cert.key;

    ssl_session_timeout 5m;

    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_prefer_server_ciphers on;


    # Django media
    location /media  {
        alias /root/work/SpokesTribe-online/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /root/work/SpokesTribe-online/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /root/work/SpokesTribe-online/uwsgi_params; # the uwsgi_params file you installe
	lua_need_request_body on;
        body_filter_by_lua '
                        local resp_body = string.sub(ngx.arg[1], 1, 1000)
                        ngx.ctx.buffered = (ngx.ctx.buffered or"") .. resp_body
                        if ngx.arg[2] then
                                ngx.var.resp_body = ngx.ctx.buffered
                        end
         ';
    }
}

    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      cert.pem;
        ssl_certificate_key  cert.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /root/work/SpokesTribe-online/uwsgi_params; # the uwsgi_params file you installed
    }
}

